/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.karm.Karm.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#ifndef KARMADAPTOR_H_290021150440560
#define KARMADAPTOR_H_290021150440560

#include <QtCore/QObject>
#include <dbus/qdbus.h>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.karm.Karm
 */
class KarmAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.karm.Karm")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.karm.Karm\" >\n"
"    <method name=\"version\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"taskIdFromName\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"taskName\" />\n"
"    </method>\n"
"    <method name=\"addTask\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"taskName\" />\n"
"    </method>\n"
"    <method name=\"setPerCentComplete\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"taskName\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"perCent\" />\n"
"    </method>\n"
"    <method name=\"bookTime\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"taskId\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"iso8601StartDateTime\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"durationInMinutes\" />\n"
"    </method>\n"
"    <method name=\"getError\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"karmErrorNumber\" />\n"
"    </method>\n"
"    <method name=\"totalMinutesForTaskId\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"taskId\" />\n"
"    </method>\n"
"    <method name=\"starttimerfor\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"taskname\" />\n"
"    </method>\n"
"    <method name=\"stoptimerfor\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"taskname\" />\n"
"    </method>\n"
"    <method name=\"stopalltimers\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"deletetodo\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setpromptdelete\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"out\" type=\"b\" name=\"prompt\" />\n"
"    </method>\n"
"    <method name=\"getpromptdelete\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"exportcsvfile\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"from\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"to\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"type\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"decimalMinutes\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"allTasks\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"delimiter\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"quote\" />\n"
"    </method>\n"
"    <method name=\"importplannerfile\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"    </method>\n"
"    <method name=\"save\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"quit\" />\n"
"  </interface>\n"
        "")
public:
    KarmAdaptor(QObject *parent);
    virtual ~KarmAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int addTask(const QString &taskName);
    int bookTime(const QString &taskId, const QString &iso8601StartDateTime, int durationInMinutes);
    QString deletetodo();
    QString exportcsvfile(const QString &filename, const QString &from, const QString &to, int type, bool decimalMinutes, bool allTasks, const QString &delimiter, const QString &quote);
    QString getError(int karmErrorNumber);
    bool getpromptdelete();
    QString importplannerfile(const QString &filename);
    void quit();
    bool save();
    QString setPerCentComplete(const QString &taskName, int perCent);
    QString setpromptdelete(bool &prompt);
    QString starttimerfor(const QString &taskname);
    QString stopalltimers();
    QString stoptimerfor(const QString &taskname);
    QString taskIdFromName(const QString &taskName);
    int totalMinutesForTaskId(const QString &taskId);
    QString version();
Q_SIGNALS: // SIGNALS
};

#endif
