/*
* kaccelmenuwatch.h -- Declaration of class KAccelMenuWatch.
* Generated by newclass on Thu Jan  7 15:05:26 EST 1999.
*/
#ifndef SSK_KACCELMENUWATCH_H
#define SSK_KACCELMENUWATCH_H

#include<qobject.h>
#include<qpopupmenu.h>
#include<qlist.h>

#include<kaccel.h>

/**
* Easy updating of menus when changing a @ref KAccel object.
* @author Sirtaj Singh Kang (taj@kde.org)
* @version $Id$
*/
class KAccelMenuWatch : public QObject
{
	Q_OBJECT

private:
	enum AccelType { StdAccel, StringAccel };

	typedef struct {
		QPopupMenu	*menu;
		int 		itemId;

		AccelType	type;

		// only one of these is used at a time
		QString		action;
		KAccel::StdAccel stdAction;
		
	} AccelItem;

	KAccel		 *_accel;
	QList<AccelItem> _accList;
	QList<QPopupMenu> _menuList;

	QPopupMenu	*_menu;

	KAccelMenuWatch::AccelItem *newAccelItem( QPopupMenu *menu, 
			int itemId, AccelType type );

public:
	/**
	* KAccelMenuWatch Constructor
	*/
	KAccelMenuWatch( KAccel *accel, QObject *parent = 0 );

	/**
	* KAccelMenuWatch Destructor
	*/
	virtual ~KAccelMenuWatch() {}

	void setMenu( QPopupMenu *menu );
	QPopupMenu *currentMenu() const  { return _menu; }

	void connectAccel( int itemId, const char *action );
	void connectAccel( int itemId, KAccel::StdAccel );
	
public slots:
	void updateMenus();

private slots:
	void removeDeadMenu();

private:
	KAccelMenuWatch& operator=( const KAccelMenuWatch& );
	KAccelMenuWatch( const KAccelMenuWatch& );
};

#endif // SSK_KACCELMENUWATCH_H
